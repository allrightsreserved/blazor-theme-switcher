@inject ThemeService Themes
@rendermode InteractiveServer
<ThemeJsChangeDispatcher InitialThemeName="@InitialThemeName"></ThemeJsChangeDispatcher>
<div class="@GetHeaderContainerCss()">
    <div class="btn-container d-flex">
        <DxButton Click="@ToggleThemeSwitcherPanel" CssClass="@GetThemeSwitcherCssClass()" SizeMode="SizeMode.Large"
                  RenderStyle="ButtonRenderStyle.Secondary" RenderStyleMode="ButtonRenderStyleMode.Outline" IconCssClass="theme-icon"
                  aria-label="Themes"
                  aria-haspopup="True"
                  aria-expanded="@(ThemeSwitcherShown.ToString())">
        </DxButton>
    </div>
    <ThemeSwitcherContainer @bind-Shown="@ThemeSwitcherShown" @bind-ThemeName="@ThemeName" />
</div>

@code {
    [Inject]
    private Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor { get; set; }
    private string? InitialThemeName { get; set; } = "blazing-berry";

    string _themeName;
    bool _themeSwitcherShown;

    protected string ThemeName {
        get { return _themeName; }
        set {
            if (_themeName != value) {
                _themeName = value;
                Themes.SetActiveThemeByName(value);
            }
        }
    }

    protected bool IsBootstrapNative {
        get { return Themes.ActiveTheme.IsBootstrapNative; }
    }
    bool ThemeSwitcherShown {
        get { return _themeSwitcherShown; }
        set {
            if (_themeSwitcherShown != value) {
                _themeSwitcherShown = value;
            }
        }
    }
    protected override void OnInitialized() {
        InitialThemeName = HttpContextAccessor.HttpContext?.Request.Cookies["ActiveTheme"] ?? InitialThemeName;
        ThemeName = InitialThemeName ?? string.Empty;
    }
    void ToggleThemeSwitcherPanel() {
        ThemeSwitcherShown = !ThemeSwitcherShown;
    }
    string GetThemeSwitcherCssClass() {
        return "themeswitcher-button theme-settings " + ThemeSwitcherShown;
    }
    string GetHeaderContainerCss() {
        List<string> cssClasses = new List<string>();
        cssClasses.Add("theme-" + ThemeName.Replace(" ", "-"));
        if (IsBootstrapNative)
            cssClasses.Add("theme-external");
        return string.Join(" ", cssClasses);
    }
}
